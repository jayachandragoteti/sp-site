"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
const minimist_1 = __importDefault(require("minimist"));
const transforms_1 = require("./lib/transforms");
const config_1 = require("./config");
const argv = minimist_1.default(process.argv.splice(2));
if (argv._.length <= 0) {
    console.error("Missing file patterns!");
    console.error(`[giismudge|giiclean] [errorHandling=embedAsComments|throwImmediate] filePattern...
If invoked as giismudge it will replace the included ignore directives in each file that matches each pattern.  Useful for updating your files!
If invoked as giiclean it will strip the included ignore directives out of each file that matches each pattern.

If you are looking to process text through a pipe, see giismudgepipe and giicleanpipe.

Options
    errorHandling: Either 'embedAsComments', the default, to cause errors
                   to save into the file or 'throwImmediate' to force the
                   program to stop on the first error.
`);
    process.exit(1);
}
exports.opts = {
    cwd: process.cwd(),
    files: argv._.filter((value) => value !== "$0"),
    errorHandling: argv.errorHandling === transforms_1.ErrorHandling.throwImmediate
        ? transforms_1.ErrorHandling.throwImmediate
        : transforms_1.ErrorHandling.embedAsComments,
};
console.log("gitignore-include", (_b = (_a = config_1.config.npmConfig) === null || _a === void 0 ? void 0 : _a.version) !== null && _b !== void 0 ? _b : "version unknown!?");
